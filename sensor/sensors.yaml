- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /share
    - type: memory_free
    - type: processor_use
    # - type: processor_temperature
- platform: rest
  name: Pihole Status
  resource: http://localhost:1080/admin/api.php?status
  headers:
    auth: !secret pihole_api_key
  value_template: "{{ value_json.status }}"

- platform: environment_canada
  scan_interval: 300

# - platform: radarr
#   api_key: !secret radarr_api_key
#   host: 10.0.0.9
#   monitored_conditions:
#     - movies
#     - upcoming
#     - commands
#     - diskspace
#     - status
#   days: 7
#   unit: TB

- platform: min_max
  name: "Home Occupancy Confidence of Colton"
  type: max
  round_digits: 0
  entity_ids:
    - sensor.laundry_room_colton
    - sensor.office_colton

- platform: min_max
  name: "Home Occupancy Confidence of Miranda"
  type: max
  round_digits: 0
  entity_ids:
    - sensor.laundry_room_miranda
    - sensor.office_miranda

- platform: min_max
  name: "Home Occupancy Confidence of Tim"
  type: max
  round_digits: 0
  entity_ids:
    - sensor.laundry_room_tim
    - sensor.office_tim

# - platform: bchydro
#   username: !secret bchydro_username
#   password: !secret bchydro_password

- platform: emby_upcoming_media
  api_key: !secret emby_api_key
  user_id: !secret emby_user_id
  host: !secret emby_host
  port: !secret emby_port
  ssl: True
  max: 5
  use_backdrop: true
  group_libraries: true

- platform: sonarr_upcoming_media
  api_key: !secret sonarr_api_key
  host: !secret sonarr_host
  port: 8989
  days: 7
  ssl: false
  max: 10

- platform: radarr_upcoming_media
  api_key: !secret radarr_api_key
  host: !secret radarr_host
  port: 7878
  days: 14
  ssl: false
  theaters: false
  max: 10

- platform: min_max
  entity_ids:
    - sensor.bathroom_temperature
    - sensor.bedroom_temperature
    - sensor.dining_room_temperature
    - sensor.living_room_temperature
    - sensor.office_temperature
    - sensor.cage_temperature
  type: mean
  name: average_indoor_temperature

- platform: template
  sensors:
    presence_detection:
      friendly_name: "Presence Detection"
      value_template: >
        {% set state = states('sensor.home_occupancy_confidence_of_tim') %}
        {% set count = [states.person.colton, states.person.miranda] | selectattr('state', '==', 'home') | list | count %}
        {% if is_number(state) and state | float > 50 %}
          {{ count + 1 }} 
        {% else %}
          {{ count }}
        {% endif %}

- platform: time_date
  display_options:
    - "time"
    - "date"
    - "date_time"
    - "date_time_utc"
    - "date_time_iso"
    - "time_date"
    - "time_utc"
    - "beat"

- platform: pirateweather
  api_key: !secret pirateweather_api_key
  scan_interval: "00:05:00"
  forecast:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6

  monitored_conditions:
    - summary
    - icon
    - precip_type
    - precip_intensity
    - precip_probability
    - precip_accumulation
    - temperature
    - apparent_temperature
    - dew_point
    - wind_speed
    - wind_gust
    - wind_bearing
    - cloud_cover
    - humidity
    - pressure
    - visibility
    - ozone
    - minutely_summary
    - hourly_summary
    - daily_summary
    - temperature_high
    - temperature_low
    - apparent_temperature_high
    - apparent_temperature_low
    - precip_intensity_max
    - uv_index
    - moon_phase
    - sunrise_time
    - sunset_time
    - nearest_storm_distance
    - nearest_storm_bearing
    - alerts

- platform: template
  sensors:
    doors_open:
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'door') | list | count }}
    windows_open:
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'window') | list | count }}
    motion_sensors_open:
      value_template: >-
        {{ states.binary_sensor | selectattr('state', 'eq', 'on') | selectattr('attributes.device_class', 'eq', 'motion') | list | count }}

# - platform: template
#   sensors:
#     battery_health:
#       value_template: >-
#         {% set batteries = states.sensor  | selectattr('attributes.device_class', 'eq', 'battery') %}
#         {% for state in batteries %}
#           {% set batteryLevel = state.state %}
#           {% if batteryLevel == "unavailable" %} {{ state.entity_id }}: unavailable
#           {% elif int(batteryLevel) <= 5 %} {{ state.entity_id }}: replace immediately
#           {% elif int(batteryLevel) > 5 and int(batteryLevel) <= 10 %} {{ state.entity_id }}: replace soon
#           {% elif int(batteryLevel) > 10 and int(batteryLevel) <= 25 %} {{ state.entity_id }}: good
#           {% elif int(batteryLevel) > 25 %} {{ state.entity_id }}: healthy
#         {% endif %}
#         {% endfor %}

- platform: template
  sensors:
    tim_presence_detection:
      friendly_name: "Tim Presence Detection"
      value_template: >
        {{ states('sensor.home_occupancy_confidence_of_tim') | int(0) }}

- platform: template
  sensors:
    battery_alert:
      value_template: >
        {% set ns = namespace(below=[]) %}
        {% set batteries = states.sensor  | selectattr('attributes.device_class', 'eq', 'battery') %}
        {% for s in batteries 
              if s.state != 'None' and s.state != 'unavailable' and s.state != 'unknown' and s.state|int < 25  %}
          {% set ns.below = ns.below + [ s ] %}
        {% endfor %}
        {{ ns.below | count }}
      attribute_templates:
        battery_low: >
          {% set ns = namespace(below=[]) %}
          {% set batteries = states.sensor  | selectattr('attributes.device_class', 'eq', 'battery') %}
          {% for s in batteries 
                if s.state != 'None' and s.state != 'unavailable' and s.state != 'unknown' and s.state|int < 25  %}
              {% set ns.below = ns.below + [ s.name ~ ' (' ~ s.state ~ '%)'] %}
            {% endfor %}
            {{ ns.below | join(', ') }}

- platform: template
  sensors:
    denon_volume:
      value_template: >
        {% if is_state('media_player.denon_avr_s720w', 'on')  %}
          {{ (state_attr('media_player.denon_avr_s720w', 'volume_level') * 100) | int }}
        {% endif %}
      friendly_name: Receiver Volume Level
      icon_template: mdi:volume-medium

- platform: template
  sensors:
    dining_room_thermostat_setpoint:
      friendly_name: Dining Room Thermostat Setpoint
      entity_id: climate.dining_room_thermostat
      value_template: "{{ states.climate.dining_room_thermostat.attributes.temperature }}"
    living_room_thermostat_setpoint:
      friendly_name: Living Room Thermostat Setpoint
      entity_id: climate.living_room_thermostat
      value_template: "{{ states.climate.living_room_thermostat.attributes.temperature }}"
